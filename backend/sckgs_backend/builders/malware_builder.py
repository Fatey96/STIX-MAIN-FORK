from stix_builder import StixBuilder
from stix2 import Malware
import faker
import json


class MalwareBuilder(StixBuilder):
    counter = 0
    faker_instance = faker.Faker()

    def __init__(self, name=None, is_family=False):
        self.name = name
        self.is_family = is_family

    @classmethod
    def _generate_malware_name(cls):
        cls.counter += 1
        return f"Malware {cls.counter}"

    def create(self, data=None):
        if isinstance(data, str):
            data = json.loads(data)

        if data and 'name' in data:
            name = data['name']
        elif self.name:
            name = self.name
        else:
            name = self._generate_malware_name()

        is_family = data['is_family'] if data and 'is_family' in data else self.is_family

        malware = Malware(name=name, is_family=is_family)
        return malware


malware_builder1 = MalwareBuilder("Custom Malware")
malware_obj1 = malware_builder1.create()
print(malware_obj1)

malware_builder2 = MalwareBuilder()
malware_obj2 = malware_builder2.create()
print(malware_obj2)